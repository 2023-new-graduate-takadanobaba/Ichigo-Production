@charset "utf-8";

/*全体*/
.wrapper{
    width: 1200px;
    margin: 0 auto;
    color: #666;
   
}
#header {
    text-align: center;
    font-size: 35px;
    width: 100%;
    margin-top: 15px;
    padding:10px;
}

/*カレンダー*/

#calendar {
    text-decoration: none;
    text-align: center;
    font-size: 20px;
    width: 100%;
}



table {
    outline: 5px solid #ddd;
    border-collapse: collapse;
    width: 100%;
}
th {
    color: #000;
}
th, td {
    background-color: rgba(252, 248, 213,0.5);
    outline: 2px solid #ddd;
    padding-top: 10px;
    padding-bottom: 10px;
    text-align: center;
    height: 100px;
}
@media screen and (max-width: 480px){ 
    th, td {
    background-color: rgba(252, 248, 213,0.5);
    outline: 2px solid #ddd;
    /* padding-top: 10px;
    padding-bottom: 10px; */
    text-align: center;
    height:10px ;
}
}




/*日曜日*/
td:first-child {
    background-color: rgb(252, 248, 213);
}
/*土曜日*/
td:last-child {
    background-color: rgb(252, 248, 213);
}

/*祝日*/
td:first-child,
td.holiday{
    color: red;
}

/*前後月の日付*/
td.disabled {
    color: #ccc;
}
/*本日*/
td.today {
    background-color: #D65E72;
    color: #fff;
}

/*ボタン*/
#next-prev-button {
    position: relative;
    z-index: 10;
}
#next-prev-button button{
    width: 90px;
    height: 65px;
    cursor: pointer;
    background: #4aa7b7;
    color: #fff;
    border: 1px solid #B78D4A;
    border-radius: 20px;
    font-size: 30px;
    padding: 0.5rem 2rem;
    margin: 1rem 0;
}
#next-prev-button button:hover{
    background-color: #9c92d4;
    border-color: #D4BB92;
}

#prev {
    float: left;
}
#next {
    float: right;
}
a{
    text-decoration: none;
    color:#000
}

a:hover{
    color:#43f6ff;
}

form{
    font-size: 30px;
    text-align: center;
    margin-top: 18px;
}
.color:hover{
    background-color:#e97979
}
.color{
    border-radius:20px;
}

td.first-child-holoday{
    color:red;
}

/*tabの形状*/
.tab{
    display: flex;
    flex-wrap: wrap;
}

.tab li a{
    display:block;
    /* background:#ddd; */
    margin:0,2px;
    padding:10px
}

/*liにactiveクラスがついた時の形状*/
.tab li.active a{
	/* background:#fff; */
    list-style:none;
}


/*エリアの表示非表示と形状*/
.area {
	display: none;/*はじめは非表示*/
	opacity: 0;/*透過0*/
	/* background: #fff; */
	padding:50px 20px;
}

/*areaにis-activeというクラスがついた時の形状*/
.area.is-active {
    display: block;/*表示*/
    animation-name: displayAnime;/*ふわっと表示させるためのアニメーション*/
    /* animation-duration: 2s; */
    animation-fill-mode: forwards;
}

/*アニメーション名 {キーフレーム{ 変化させるプロパティ: 値; } }
@keyframes規則はアニメーションの動きを指定する@規則です。
animation-nameプロパティで指定したアニメーション名を参照し、
各キーフレーム（経過点）ごとに変化させる要素のプロパティを指定します。
また、animation-durationプロパティによる時間の指定は必須です。*/
@keyframes displayAnime{
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}
